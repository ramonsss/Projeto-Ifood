/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telaUsuario;

import Classes.Acoes;
import java.util.ArrayList;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Ramon Souza
 */
public class CarrinhoComprasFrame extends javax.swing.JFrame {

    /**
     * Creates new form CarrinhoComprasFrame
     */
    public CarrinhoComprasFrame() {
        initComponents();
    }

    ArrayList<String> produtoInfo = new ArrayList<>();

    public CarrinhoComprasFrame(ArrayList<String> produtoInfo) {
        initComponents();
        this.produtoInfo = produtoInfo;
        adicionarProdutosAoPanel(); // Adiciona os produtos ao painel
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Left = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        voltar = new javax.swing.JButton();
        panelRight = new javax.swing.JPanel();
        btnComprar = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));

        jPanel2.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanel2.setLayout(null);

        Left.setBackground(new java.awt.Color(234, 29, 44));
        Left.setPreferredSize(new java.awt.Dimension(400, 600));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Ramon Souza\\Documents\\NetBeansProjects\\LoginAndCadastro\\src\\Icon\\logo250x250-removebg-preview.png")); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel3.setText("copyright © RSFOOD Todos os direitos reservados");

        voltar.setForeground(new java.awt.Color(234, 29, 44));
        voltar.setText("Voltar");
        voltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LeftLayout = new javax.swing.GroupLayout(Left);
        Left.setLayout(LeftLayout);
        LeftLayout.setHorizontalGroup(
            LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftLayout.createSequentialGroup()
                .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LeftLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(voltar))
                    .addGroup(LeftLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(LeftLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel2)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        LeftLayout.setVerticalGroup(
            LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftLayout.createSequentialGroup()
                .addContainerGap(128, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(72, 72, 72)
                .addComponent(jLabel3)
                .addGap(46, 46, 46)
                .addComponent(voltar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );

        jPanel2.add(Left);
        Left.setBounds(0, 0, 340, 620);

        panelRight.setBackground(new java.awt.Color(255, 255, 255));

        btnComprar.setBackground(new java.awt.Color(51, 153, 0));
        btnComprar.setText("Comprar");
        btnComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRightLayout = new javax.swing.GroupLayout(panelRight);
        panelRight.setLayout(panelRightLayout);
        panelRightLayout.setHorizontalGroup(
            panelRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRightLayout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addComponent(btnComprar, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        panelRightLayout.setVerticalGroup(
            panelRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRightLayout.createSequentialGroup()
                .addContainerGap(553, Short.MAX_VALUE)
                .addComponent(btnComprar)
                .addGap(24, 24, 24))
        );

        jPanel2.add(panelRight);
        panelRight.setBounds(340, 0, 560, 600);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        // TODO add your handling code here:

        Acoes ac = new Acoes();

        telaDoUsuario telaDoUsuarioFrame = new telaDoUsuario(produtoInfo);

        System.out.println("Dados do produto no botao voltar do ListarProduto: ");
        for (String info : produtoInfo) {
            System.out.println(info);
        }

        ac.listarLojas(telaDoUsuarioFrame);

        telaDoUsuarioFrame.setVisible(true);
        telaDoUsuarioFrame.pack();
        telaDoUsuarioFrame.setLocationRelativeTo(null); // para abrir sempre no centro da tela
        this.dispose();

    }//GEN-LAST:event_voltarActionPerformed

    private void btnComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprarActionPerformed
        // TODO add your handling code here:

        // Calcula o tempo médio diminuindo 15 minutos
        int totalHoras = 0;
        int totalMinutos = 0;

        for (String produto : produtoInfo) {
            // Processa o tempo de preparo para somar
            String tempoDePreparo = produto.split("Tempo de Preparo: ")[1].split("\n")[0].trim();

            // Exemplo de tempo de preparo no formato "XXhYYm"
            String[] partesTempo = tempoDePreparo.split("h");

            // Extração das horas e minutos
            int horas = Integer.parseInt(partesTempo[0]);
            int minutos = Integer.parseInt(partesTempo[1].replace("m", ""));

            totalHoras += horas;
            totalMinutos += minutos;
        }

        // Soma o total de minutos e calcula o tempo médio
        int tempoTotalEmMinutos = totalHoras * 60 + totalMinutos;
        int quantidadeProdutos = produtoInfo.size();
        int tempoMedioEmMinutos = quantidadeProdutos > 0 ? tempoTotalEmMinutos / quantidadeProdutos : 0;

        // Reduz 15 minutos do tempo médio
        tempoMedioEmMinutos = Math.max(0, tempoMedioEmMinutos - 15);

        // Converte o tempo médio ajustado para horas e minutos
        int tempoMedioHoras = tempoMedioEmMinutos / 60;
        int tempoMedioMinutos = tempoMedioEmMinutos % 60;

        // Mensagem de confirmação
        String mensagem = String.format(
                "<html>Obrigado pela confiança!<br>Seu pedido estará pronto em: %dh %dm.<br><br>Será entregue em mais ou menos 15 minutos.</html>",
                tempoMedioHoras, tempoMedioMinutos
        );

        // Exibe o JOptionPane com a mensagem
        JOptionPane.showMessageDialog(null, mensagem, "Compra Confirmada", JOptionPane.INFORMATION_MESSAGE);

        // Limpa o carrinho (ArrayList)
        produtoInfo.clear();

        // Atualiza o painel para refletir as mudanças
        panelRight.removeAll();
        panelRight.revalidate();
        panelRight.repaint();


    }//GEN-LAST:event_btnComprarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CarrinhoComprasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CarrinhoComprasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CarrinhoComprasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarrinhoComprasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CarrinhoComprasFrame().setVisible(true);
            }
        });
    }

    // Atualiza o método para calcular o tempo médio de espera
    private void adicionarProdutosAoPanel() {
        // Definir o layout do panelRight para BoxLayout com orientação vertical
        panelRight.setLayout(new BoxLayout(panelRight, BoxLayout.Y_AXIS));

        // Variáveis para acumular o tempo total
        int totalHoras = 0;
        int totalMinutos = 0;
        double totalPreco = 0.0;

        for (int i = 0; i < produtoInfo.size(); i++) {
            String produto = produtoInfo.get(i);

            // Criar o JLabel para "Produto X" com negrito, maiúsculo e cor específica
            String tituloProduto = "Produto " + (i + 1) + ":";
            JLabel labelTituloProduto = new JLabel(tituloProduto.toUpperCase());  // Tudo em maiúsculo
            labelTituloProduto.setFont(new java.awt.Font("Segoe UI", java.awt.Font.BOLD, 14)); // Negrito
            labelTituloProduto.setForeground(new java.awt.Color(234, 29, 44)); // Cor [234, 29, 44]

            // Adiciona o título do produto ao panelRight
            panelRight.add(labelTituloProduto);

            // Criar o JLabel para as informações do produto
            String produtoInformacao = produto.replace("\n", "<br>");  // Substitui as quebras de linha para <br> (HTML)

            // Alterar o preço para a cor [51,153,0]
            produtoInformacao = produtoInformacao.replaceAll("Preço: (\\d+\\.\\d+)",
                    "<font color='#339900'>Preço: $1</font>");  // Regex para capturar e alterar a cor do preço

            JLabel labelProduto = new JLabel("<html>" + produtoInformacao + "</html>");

            // Estilize o JLabel com a fonte padrão
            labelProduto.setFont(new java.awt.Font("Segoe UI", 0, 14));
            labelProduto.setForeground(new java.awt.Color(0, 0, 0)); // Cor padrão para o restante do texto

            // Adiciona as informações do produto ao panelRight
            panelRight.add(labelProduto);

            // Adiciona um espaço extra após cada produto
            panelRight.add(Box.createVerticalStrut(10));  // Ajuste o espaçamento conforme necessário

            // Processa o tempo de preparo para somar
            String tempoDePreparo = produto.split("Tempo de Preparo: ")[1].split("\n")[0].trim(); // Extrai o tempo de preparo da string

            // Exemplo de tempo de preparo no formato "XXhYYm"
            String[] partesTempo = tempoDePreparo.split("h");

            // Extração das horas e minutos
            int horas = Integer.parseInt(partesTempo[0]);
            int minutos = Integer.parseInt(partesTempo[1].replace("m", ""));

            // Soma do tempo de preparo
            totalHoras += horas;
            totalMinutos += minutos;

            // Encontrar o índice da string "Preço:" e extrair o valor após ela
            int precoIndex = produto.indexOf("Preço:") + 7; // O comprimento da palavra "Preço: " é 7

            if (precoIndex != -1) { // Verifica se encontrou "Preço:"
                String precoString = produto.substring(precoIndex).trim(); // Extrai a parte do preço da string

                // Tenta converter o preço para double e soma ao total
                try {
                    double preco = Double.parseDouble(precoString);
                    totalPreco += preco;  // Soma o preço ao total
                } catch (NumberFormatException e) {
                    System.out.println("Erro ao converter o preço para número: " + precoString);
                }
            }
        }

        // Adiciona 15 minutos extras ao tempo total de espera
        totalMinutos += 15;

        // Converte o tempo total para minutos
        int tempoTotalEmMinutos = totalHoras * 60 + totalMinutos;

        // Calcula o tempo médio por produto
        int quantidadeProdutos = produtoInfo.size();
        int tempoMedioEmMinutos = quantidadeProdutos > 0 ? tempoTotalEmMinutos / quantidadeProdutos : 0;

        // Converte o tempo médio de minutos para horas e minutos
        int tempoMedioHoras = tempoMedioEmMinutos / 60;
        int tempoMedioMinutos = tempoMedioEmMinutos % 60;

        // Exibe o tempo médio de espera no console
        System.out.println("Tempo médio de espera: " + tempoMedioHoras + "h " + tempoMedioMinutos + "m");

        // Exibe o total no console
        System.out.println("Total dos preços: R$ " + totalPreco);

        // Exibir o tempo médio de espera
        JLabel labelTempoEspera = new JLabel("TEMPO MÉDIO DE ESPERA: " + tempoMedioHoras + "h " + tempoMedioMinutos + "m");
        labelTempoEspera.setFont(new java.awt.Font("Segoe UI", java.awt.Font.BOLD, 16)); // Negrito
        labelTempoEspera.setForeground(new java.awt.Color(51, 153, 255));

        // Exibir o total no JLabel com a cor [234, 29, 44]
        JLabel labelTotal = new JLabel("TOTAL DOS PREÇOS: R$ " + String.format("%.2f", totalPreco));
        labelTotal.setFont(new java.awt.Font("Segoe UI", java.awt.Font.BOLD, 24)); // Negrito
        labelTotal.setForeground(new java.awt.Color(51, 0, 51));

        // Adicionar os JLabels ao painel
        panelRight.add(labelTotal);
        panelRight.add(Box.createVerticalStrut(35));  // Espaçamento entre os elementos
        panelRight.add(labelTempoEspera);

        // Atualiza o layout do painel
        panelRight.revalidate();
        panelRight.repaint();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Left;
    private javax.swing.JButton btnComprar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel panelRight;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
}
